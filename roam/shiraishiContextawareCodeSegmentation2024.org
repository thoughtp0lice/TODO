:PROPERTIES:
:ID:       0fe856ac-69b2-48a1-8a24-af5b2944f031
:ROAM_REFS: @shiraishiContextawareCodeSegmentation2024
:END:
#+title: Context-Aware Code Segmentation for C-to-Rust Translation Using Large Language Models - Shiraishi, Momoko and Shinagawa, Takahiro

A [[id:7bda4624-f0e3-46b7-9f66-098c9802ad92][Rust2C related works]]
Improve compile success rate of translated rust code

* Pre-processing the C code
- Merging C code into modules :: merging header files and actual c files
- Reordering C code elements :: reorder C functions and types in the merged module in topological order or the order in which they are referenced.
- Handling C macros :: keep most, use ~cfg~ for ~#ifdef~
* Optimizing the code segment size
- Segmenting C modules into translation units :: segment logically to fit to context window and half the size if failed
* Supplementing contexts between translations
- Extracting contextual metadata :: functions, macro functions, type definitions, macro variables, variables, and others.
